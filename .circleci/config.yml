version: 2.1

orbs: 
  snyk: snyk/snyk@0.0.8

jobs:
  snyk:
    docker:
      - image: circleci/python:3.5
    working_directory: ~/repo
    steps:
        - checkout
        - run:
            name: install dependencies
            command: |
                python3 -m venv venv
                . venv/bin/activate
                make install
        - run: echo "source ~/repo/venv/bin/activate" >> $BASH_ENV # här gör vi så att så att CircleCi automatisk laddar venv och då kollar Snyk vad vi har installerat i den.
        - snyk/scan
  test_app:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/test
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "requirements/dev.txt" }}
            - m2- # used if checksum fails
      - run:
          name: Install dev dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install-dev
      - save_cache:
          key: m2-{{ checksum "requirements/dev.txt" }}
          paths:
            - venv
      - run:
          name: Run tests
          command: docker-compose up test-circleci
  deploy_to_azure:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/deploy
    steps:
      - checkout
      - run:
          name: Copy code to azure server
          command: |
            tar -zcvf ../deploy.tar.gz .
            cat ../deploy.tar.gz | ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "cat - | tar xvz --no-overwrite-dir -C $DEPLOY_PROJECT_PATH"
      - run:
          name: Deploy to azure via SSH
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "supervisorctl restart microblog"
  deploy_to_docker_hub:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Create Docker Image
          command: |
            docker build -t $DOCKERHUB_USERNAME/microblog -f docker/Dockerfile.prod .

      - snyk/scan:
        docker-image-name: $IMAGE_NAME
        
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $DOCKERHUB_USERNAME/microblog:latest
  ansible_deploy_to_azure:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "requirements/dev.txt" }}
            - m2- # used if checksum fails
      - run:
          name: Add public ssh key
          command: echo "$SSH_PUB_KEY" > ~/.ssh/id_rsa.pub
      - run:
          name: Install deploy dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install-deploy
      - run:
          name: Ansible-playbook deploy
          command: |
            python3 -m venv venv
            . venv/bin/activate
            cd ansible
            ansible-playbook gather_vm_instances.yml appServer.yml
workflows:
  deploy:
    jobs:
      - test_app
      - deploy_to_docker_hub:
          requires:
            - test_app
          filters:
            branches:
              only:
                - master
                - circleci-project-setup
                - docker
      - ansible_deploy_to_azure:
          requires:
            - test_app
            - deploy_to_docker_hub
          filters:
            branches:
              only:
                - master
                - circleci-project-setup
                - ansible
        